doctype 5
html
head
title sup #{room}
script(src="socket.io/socket.io.js");
script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js")
script
  var prevVote = 'neutral';

  var room = '#{room}';
  var results;
  var prevSearch;
  var found;
  //script('http://cdn.socket.io/stable/socket.io.js')
  $(function(){

    var socket = io.connect();

    socket.emit('join room', room);

    socket.on('msg', function(data){
      console.log(data);
    });

    socket.on('changeSong', function(songURI){
      setVoteColor('neutral');      
      $("#loadSong").attr('src', songURI);

      // bump previously played song up
      var prevSong = $(".currentlyPlaying");
      prevSong.removeClass("currentlyPlaying");
      prevSong.addClass("alreadyPlayed");

      // mark current song as playing
      var nowPlaying = $(".comingUp").filter(":first");
      nowPlaying.removeClass("comingUp");
      nowPlaying.addClass("currentlyPlaying");
    });

    socket.on('songForList', function(songInfoRaw){
      var songInfo = jQuery.parseJSON(songInfoRaw);
      var trackStr = songInfo.track.artists[0].name + " - " + songInfo.track.name;
      $("#queue").append("<p class='comingUp'>"+trackStr+"</p>");
    });

    socket.on('votes', function(voteRecords){
      $("#goodSong").val(voteRecords.good);
      $("#neutralSong").val(voteRecords.neutral);
      $("#badSong").val(voteRecords.bad);
    });

    socket.on('users', function(userCount){
      $("#users").text(userCount + " people currently connected");
    });

    socket.on('disconnect', function() {
       socket.emit('disconnect');
    });      

    socket.on('name', function(name) {
       $("#chatName").text(name);
    });

    socket.on('name repeat', function(name) {
       alert("Sorry the name '"+name+"' is already taken");
    });

    socket.on('chat', function(name,msg) {
       if (name == 'system') {
          $("#chatHistory").append("<p> "+msg+"</p>");
       } 
       else {
          $("#chatHistory").append("<p>"+name+": "+msg+"</p>");
       }
       $("#chatHistory").prop("scrollTop",$("#chatHistory").prop("scrollHeight"));
    });

    // add song to server queue
    $("#sub").click(function(e){
      e.preventDefault();
      var uriToAdd = $("#uri").val()

      $("#uri").val("");
      socket.emit('queueUp', uriToAdd);
    });

    $("#playItOff").click(function(e){
      e.preventDefault();
      socket.emit('startPlayback');
    });

    $("#goodSong").click(function(e){
      socket.emit('vote', 'good');
      setVoteColor('good');
    });

    $("#neutralSong").click(function(e){
      socket.emit('vote','neutral');
      setVoteColor('neutral');
    });

    $("#badSong").click(function(e){
      socket.emit('vote','bad');
      setVoteColor('bad');
    });		

  $("#songSearch").click(function(e) {
     $("#songSearch").val('');
  });

  $("#chatNameSubmit").click(function(e) {
     var newName = $("#chatNameSet").val();
     $("#chatNameSet").val('');
     socket.emit('chat name',newName);
  });
  
  $("#chatMessage").keypress(function(e) {
     if(e.which == 13) {  // on enter key
          var message = $("#chatMessage").val();
          if (message != '') {
            $("#chatMessage").val('');
            socket.emit('chat message', message);
          }
     }
  });

    $("#songSearch").keyup(function(e){
       var songName = $("#songSearch").val();
       if (songName.length > 0) {
        if (songName != prevSearch) {
          prevSearch = songName;
          $.get("http://ws.spotify.com/search/1/track.json?q="+songName, {}, 
           function(rawData) {
               results = jQuery.parseJSON(rawData);
               found = {};
               displaySearchResults(0);
           }, 'text');
          }
       }  // end if songName > 0
       else {
          $("#results").text('');
       }
    });

  });
  
  // Displays results starting at a given value
  function displaySearchResults(start) {
           var count = 0;  // how many things we've added
           $("#results").text('');         
           for(var i=start;count < 5 && i<results.tracks.length; i++) {
               var track = results.tracks[i];
               var availability = track.album.availability.territories;
               var class = '';
               if (availability.indexOf('US') < 0) { // only show things available in US
                 class = 'unavailable';
               }
                 var artist = track.artists[0].name;
                 var song = track.name;
                 if (!found[artist+song]) {
                   var toAdd = artist + ' - '+song;
                   $("#results").append('<p class="'+class+'" onClick="setAddText('+"'"+track.href+"'"+')">'+toAdd+'</p>');
                   count++;
                   found[artist+song] = true;
                 }
           }
           start += 5;
           $("#results").append('<p onClick="displaySearchResults('+start+')">More</p>');
  }

  function setAddText(text) {
    $("#uri").val(text);
  }

  function setVoteColor(selected) {
     if (prevVote != '') {
        $("#"+prevVote+"Song").removeClass('selectedVote').addClass('nonselectedVote');
     }
     $("#"+selected+"Song").attr('class', 'selectedVote');	
     prevVote = selected;
  };

body   

  #people
    p Listening to: #{room}
    p#users #{actives} people currently connected
  #search Search:
    input#songSearch(type="text", value="Enter song/artist name")
    #results
  #songStuff
    table#voteSongs(width="60%",)
        tr
          td Like: 
            input#goodSong.nonselectedVote(type="button", value="0")
          td Neutral: 
            input#neutralSong.selectedVote(type="button", value="0")
          td Skip: 
            input#badSong.nonselectedVote(type="button", value="0")
    #inputSongs
      form#uriForm
        input#uri(type="text", size ="20" )
        input#sub(type="submit", value="add")
        form#next
          input#playItOff(type="submit", value="next song")
    h5 Songs
    #queue
  #chat     
    p Currently you are:
     #chatName
    p 
    p Change your name:
    input#chatNameSet(type="text")
    input#chatNameSubmit(type="button",value="Set Name")
    #chatHistory
    p Message:
    input#chatMessage(type="text")
  iframe#loadSong(style="width:0px; height:0px; border: 0px", src="")




